// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å" –≤ Telegram Web App
tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º Web App –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
tg.MainButton.show(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
tg.MainButton.setText("–ó–∞–∫—Ä—ã—Ç—å"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å"
tg.MainButton.onClick(() => {
    tg.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º Web App
});

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const user = tg.initDataUnsafe.user;

if (user) {
    console.log("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user);
    // –ü—Ä–∏–º–µ—Ä: –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userName = user.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
    document.getElementById('user-name').textContent = `–ü—Ä–∏–≤–µ—Ç, ${userName}!`;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞ (—Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
let balance = parseInt(localStorage.getItem('userBalance')) || 100; // –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
const balanceElement = document.getElementById('balanceAmount');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
const themeToggle = document.createElement('button');
themeToggle.textContent = 'üåô';
themeToggle.classList.add('btn', 'btn-primary');
themeToggle.style.position = 'fixed';
themeToggle.style.top = '1rem';
themeToggle.style.right = '1rem';
themeToggle.style.zIndex = '1000';
document.body.appendChild(themeToggle);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
function updateBalance(amount) {
    balance += amount;
    if (balanceElement) {
        balanceElement.textContent = `${balance} CP`;
    }
    localStorage.setItem('userBalance', balance); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–ª–∞–Ω—Å
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞
function loadBalance() {
    const savedBalance = localStorage.getItem('userBalance');
    if (savedBalance) {
        balance = parseInt(savedBalance, 10);
    }
    if (balanceElement) {
        balanceElement.textContent = `${balance} CP`;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Ç–µ–º—ã
function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É
    themeToggle.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
function applyTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
    themeToggle.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã
function loadTheme() {
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Ç–µ–º–æ–π Telegram
    const telegramTheme = tg.colorScheme; // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–º—É Telegram
    const savedTheme = localStorage.getItem('theme') || telegramTheme; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–º—É Telegram –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    applyTheme(savedTheme); // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    loadBalance();
    loadTheme();

    themeToggle.addEventListener('click', toggleTheme);

    // –ü—Ä–∏–º–µ—Ä: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CP –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    setTimeout(() => {
        updateBalance(10);
        alert('+10 CP –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!');
    }, 60000); // –ß–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
});

// –ü–æ–∏—Å–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤
const searchInput = document.createElement('input');
searchInput.placeholder = '–ü–æ–∏—Å–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤...';
searchInput.classList.add('form-input');
document.querySelector('.search-bar')?.appendChild(searchInput);

searchInput.addEventListener('input', (e) => {
    const searchTerm = e.target.value.toLowerCase();
    const presets = document.querySelectorAll('.preset-card');
    presets.forEach(preset => {
        const title = preset.querySelector('h3').textContent.toLowerCase();
        if (title.includes(searchTerm)) {
            preset.style.display = 'block';
        } else {
            preset.style.display = 'none';
        }
    });
});

// –¢–æ–ø-10 –ø—Ä–µ—Å–µ—Ç–æ–≤ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
const topPresets = [
    { name: 'Preset 1', description: '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞ 1', popularity: 100 },
    { name: 'Preset 2', description: '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞ 2', popularity: 90 },
    // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –ø—Ä–µ—Å–µ—Ç–æ–≤
];

const topPresetsList = document.createElement('div');
topPresetsList.classList.add('presets-list');
document.querySelector('.section')?.appendChild(topPresetsList);

topPresets.forEach(preset => {
    const presetCard = document.createElement('div');
    presetCard.classList.add('preset-card');
    presetCard.innerHTML = `
        <h3>${preset.name}</h3>
        <p>${preset.description}</p>
        <p>–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: ${preset.popularity}</p>
    `;
    topPresetsList.appendChild(presetCard);
});

// –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ)
if (document.getElementById('achievements-section')) {
    const achievements = [
        { name: '–ù–æ–≤–∏—á–æ–∫', description: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Å–µ—Ç', completed: false },
        { name: '–≠–Ω—Ç—É–∑–∏–∞—Å—Ç', description: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ 5 –ø—Ä–µ—Å–µ—Ç–æ–≤', completed: false },
        // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    ];

    const achievementsSection = document.getElementById('achievements-section');
    achievementsSection.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ

    achievements.forEach(achievement => {
        const achievementCard = document.createElement('div');
        achievementCard.classList.add('achievement-card');
        achievementCard.innerHTML = `
            <h3>${achievement.name}</h3>
            <p>${achievement.description}</p>
            <p>${achievement.completed ? '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ'}</p>
        `;
        achievementsSection.appendChild(achievementCard);
    });
}

// –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–µ—Å–µ—Ç–æ–≤
document.getElementById('upload-preset-form')?.addEventListener('submit', (e) => {
    e.preventDefault();
    updateBalance(10);
    alert('+10 CP –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–µ—Å–µ—Ç–∞!');
});

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
document.getElementById('create-quest-form')?.addEventListener('submit', (e) => {
    e.preventDefault();
    const reward = parseInt(document.querySelector('#create-quest-form input[type="number"]').value, 10);
    if (deductBalance(reward)) {
        alert(`–ö–≤–µ—Å—Ç —Å–æ–∑–¥–∞–Ω! –° –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–ø–∏—Å–∞–Ω–æ ${reward} CP.`);
    }
});
